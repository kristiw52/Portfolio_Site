/*  CSS Document - lynda.com  */



.gallery { width: 60%; margin: 20px auto; position: relative; }
/*the margin here will center that div on the page. And the position of relative will make sure that the gallery div will not absolute position based on it's parent, which will be the body tag. but any items inside, which is going to contain all of our thumbnails, will be positioned relative to this object. So now the gallery shows up in front of the background graphic. */

.gallery .photos .thumbnail_container { position: relative; }
.gallery .photos .thumbnail_container a.thumbnail { position: absolute; }
.gallery .photos .thumbnail_container a.thumbnail img { width: 125px; height: 125 px; border: 1px; }
/* the width and height here can be changed - this is the size of the thumbnails. And the absolute position is how we're going to control how they position and resort themselves. Then in JavaScript we'll target every one of these thumbnails and lay them out based on the item that you're sorting on, and the amount of screen real estate avaialble. */


.clear_both { clear: both; line-height: 1px; }


/* Vertical - can hide the .title properties if no title is on there */ 
@media screen and (min-height:50px) and (max-height:520px) {
}
@media screen and (min-height:521px) and (max-height:700px) { 
}
@media screen and (min-height:701px) { 
}
	
/* Horizontal - can hide the .title properties if no title is on there  */	
@media screen and (min-width:50px) and (max-width:500px) { 
body { padding: 5px 0px 0px 5px; }
	.gallery { width: auto; margin-left: 35px; }
}
@media screen and (min-width:501px) and (max-width:960px) { 
}
@media screen and (min-width:961px) { 
}	


